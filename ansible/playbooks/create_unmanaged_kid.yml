---
- name: Deploy unmanaged-kid Nginx with TLS in Kubernetes
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    cert_path: "files/artifacts/samples/unmanaged-kid.svc.cluster.local.crt"
    key_path: "files/artifacts/samples/unmanaged-kid.svc.cluster.local.key"
    tls_secret_name: "unmanaged-kid.svc.cluster.local"
    namespace: "sandbox"
  tasks:
    - name: Ensure artifacts directory exists
      ansible.builtin.file:
        path: "files/artifacts/samples"
        state: directory
        mode: '0755'

    - name: Generate RSA private key
      community.crypto.openssl_privatekey:
        path: "{{ key_path }}"
        size: 2048

    - name: Generate a self-signed certificate
      community.crypto.x509_certificate:
        path: "{{ cert_path }}"
        privatekey_path: "{{ key_path }}"
        provider: selfsigned
        selfsigned_not_before: +0s
        selfsigned_not_after: +91d
        selfsigned_digest: sha256
        selfsigned_create_subject_key_identifier: always_create
        selfsigned_version: 3

    - name: Create TLS secret in Kubernetes
      kubernetes.core.k8s:
        state: present
        namespace: "{{ namespace }}"
        kind: Secret
        name: "{{ tls_secret_name }}"
        api_version: v1
        definition:
          type: kubernetes.io/tls
          data:
            tls.crt: "{{ lookup('file', cert_path) | b64encode }}"
            tls.key: "{{ lookup('file', key_path) | b64encode }}"

    - name: Deploy unmanaged-kid Nginx Service
      kubernetes.core.k8s:
        state: present
        namespace: "{{ namespace }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: unmanaged-kid-nginx
            namespace: "{{ namespace }}"
          spec:
            type: NodePort
            ports:
              - port: 80
            selector:
              app: unmanaged-kid-nginx

    - name: Deploy unmanaged-kid Nginx Deployment
      kubernetes.core.k8s:
        state: present
        namespace: "{{ namespace }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app: unmanaged-kid-nginx
            name: unmanaged-kid-nginx
            namespace: "{{ namespace }}"
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: unmanaged-kid-nginx
            strategy:
              type: Recreate
            template:
              metadata:
                labels:
                  app: unmanaged-kid-nginx
              spec:
                containers:
                  - image: nginx:latest
                    name: unmanaged-kid-nginx
                    volumeMounts:
                      - mountPath: "/etc/unmanaged-kid-nginx/ssl"
                        name: unmanaged-kid-nginx-ssl
                        readOnly: true
                    ports:
                      - containerPort: 80
                volumes:
                  - name: unmanaged-kid-nginx-ssl
                    secret:
                      secretName: "{{ tls_secret_name }}"
                restartPolicy: Always