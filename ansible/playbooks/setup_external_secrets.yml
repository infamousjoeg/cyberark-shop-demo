---
- name: Setup External Secrets for CyberArk Integration
  hosts: localhost
  connection: local
  gather_facts: yes
  become: yes
  vars_files:
    - vars/vars.yml
  tasks:
    # Read the resource suffix if it exists for consistent naming
    - name: Read the resource suffix from file
      ansible.builtin.slurp:
        src: "files/artifacts/conjur/resource_suffix.txt"
      register: suffix_file
      failed_when: false  # Don't fail if file doesn't exist

    - name: Set suffix from file
      ansible.builtin.set_fact:
        resource_suffix: "{{ suffix_file['content'] | b64decode | trim }}"
      when: suffix_file.failed is not defined or not suffix_file.failed

    - name: Set cyberark_safe_name with suffix
      ansible.builtin.set_fact:
        cyberark_safe_name: "{{ cyberark_safe_name }}-{{ resource_suffix }}"

    # Ensure required directories exist
    - name: Ensure artifacts/conjur directory exists
      ansible.builtin.file:
        path: "files/artifacts/conjur"
        state: directory
        mode: '0755'

    # Template SecretStore manifest
    - name: Create SecretStore manifest from template
      ansible.builtin.template:
        src: "files/templates/external-secrets/secretStore.yaml.j2"
        dest: "files/artifacts/conjur/secretStore.yaml"
        mode: '0644'

    # Template ExternalSecret manifest for PostgreSQL account
    - name: Create ExternalSecret manifest from template
      ansible.builtin.template:
        src: "files/templates/external-secrets/externalSecret.yaml.j2"
        dest: "files/artifacts/conjur/externalSecret.yaml"
        mode: '0644'

    # Apply SecretStore to the cluster
    - name: Apply SecretStore to the cluster
      kubernetes.core.k8s:
        state: present
        src: "files/artifacts/conjur/secretStore.yaml"
      register: secretstore_result
      
    # Wait for SecretStore to be ready
    - name: Wait for SecretStore to be available
      ansible.builtin.pause:
        seconds: 5
      when: secretstore_result.changed

    # Apply ExternalSecret to the cluster
    - name: Apply ExternalSecret for PostgreSQL to the cluster
      kubernetes.core.k8s:
        state: present
        src: "files/artifacts/conjur/externalSecret.yaml"
      register: externalsecret_result
