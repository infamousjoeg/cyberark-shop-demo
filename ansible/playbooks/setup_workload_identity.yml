- name: Setup Workload Identity
  hosts: localhost
  connection: local
  gather_facts: no
  become: yes
  vars_files:
    - vars/vars.yml
  tasks:
    # Read the suffix from the file
    - name: Read the resource suffix from file
      ansible.builtin.slurp:
        src: "files/artifacts/conjur/resource_suffix.txt"
      register: suffix_file
      failed_when: false  # Don't fail if the file doesn't exist yet

    # Set the suffix from the file content if the file exists
    - name: Set suffix from file
      ansible.builtin.set_fact:
        resource_suffix: "{{ suffix_file['content'] | b64decode | trim }}"
      when: suffix_file.failed is not defined or not suffix_file.failed

    # Example of reconstructing the safe name with suffix
    - name: Reconstruct safe name with suffix
      ansible.builtin.set_fact:
        cyberark_safe_name: "{{ cyberark_safe_name }}-{{ resource_suffix }}"
      when: resource_suffix is defined

    - name: Create Workload Identity policy
      ansible.builtin.template:
        src: "files/templates/external-secrets/policy/workload-identity.yaml.j2"
        dest: "files/artifacts/conjur/workload-identity-policy.yaml"
        mode: '0644'
    
    - name: Load Workload Identity policy
      ansible.builtin.command:
        cmd: "conjur policy load -b data -f files/artifacts/conjur/workload-identity-policy.yaml"
      register: workload_identity_result
      changed_when: "'Loaded policy' in workload_identity_result.stdout"
    
    - name: Create JWT Authenticator grant policy
      ansible.builtin.template:
        src: "files/templates/external-secrets/policy/grant-authn-jwt.yaml.j2"
        dest: "files/artifacts/conjur/grant-authn-jwt.yaml"
        mode: '0644'
    
    - name: Load Workload Identity grant policy
      ansible.builtin.command:
        cmd: "conjur policy load -b conjur/authn-jwt -f files/artifacts/conjur/grant-authn-jwt.yaml"
      register: authn_jwt_grant_result
      changed_when: "'Loaded policy' in authn_jwt_grant_result.stdout"
